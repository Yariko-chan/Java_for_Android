buildscript {
    repositories {
        maven { url 'https://maven.fabric.io/public' }
    }

    dependencies {
        classpath 'io.fabric.tools:gradle:1.+'
    }
}
apply plugin: 'com.android.application'
apply plugin: 'io.fabric'

repositories {
    maven { url 'https://maven.fabric.io/public' }
}

apply plugin: 'realm-android'

android {
    compileSdkVersion 25
    buildToolsVersion "26.0.1"
    defaultConfig {
        applicationId "com.example.diana.androidclasswork"
        minSdkVersion 15
        targetSdkVersion 25
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    signingConfigs {
        debug {
            storeFile file('C:\\Users\\Diana\\Projects\\Android\\debug_certificate.jks')
            storePassword '123456'
            keyAlias 'Classwork'
            keyPassword '123456'
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            signingConfig signingConfigs.debug

            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    productFlavors {
        production {
            buildConfigField "String", "API_REST", "\" https://tut.by \""
            versionCode 1
            versionName "1.0"
        }
        developer {
            buildConfigField "String", "API_REST", "\" https://test.tut.by \""

            versionCode 1
            versionName "1.0"
        }
    }
    dataBinding {
        enabled = true
    }
}

//task loadToFabric(dependsOn: "assembleDeveloperDebug") {
//    def task = tasks.getByName("crashlyticsUploadDistributionDeveloperDebug")
//    task.ext.betaDistributionReleaseNotes = ""
//    task.ext.betaDistributionGroupAliases = ""
//    task.execute()
//}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })

    compile project(path: ':domain')
    compile 'com.android.support:appcompat-v7:25.3.1'
    compile 'com.android.support:design:25.3.1'
    compile 'com.android.support:support-v4:25.3.1'
    compile 'com.android.support.constraint:constraint-layout:1.0.2'
    compile 'io.reactivex.rxjava2:rxandroid:2.0.1'
    compile 'io.reactivex.rxjava2:rxjava:2.1.2'
    compile 'com.jakewharton:butterknife:8.8.1'
    compile 'com.google.dagger:dagger:2.8'
    testCompile 'junit:junit:4.12'
    annotationProcessor 'com.google.dagger:dagger-compiler:2.8'
    annotationProcessor 'com.android.databinding:compiler:2.3.0'
    annotationProcessor 'com.jakewharton:butterknife-compiler:8.8.1'
    compile('com.crashlytics.sdk.android:crashlytics:2.6.8@aar') {
        transitive = true;
    }
}
